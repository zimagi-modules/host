_command: &command
    provider: remote_command
    roles: zimagi-admin
    servers:
        - name.startswith="@platform_name"


_update_command: &update_command
    <<: *command
    command: docker-compose rm -fs && docker-compose pull && docker-compose up -d && docker image prune -fa && docker-compose restart

_restart_command: &restart_command
    <<: *command
    command: docker-compose restart

_log_command: &log_command
    <<: *command
    command: docker-compose logs --tail=@count @service
    options:
        count: 100
        service: ""


environment:
    <<: *command
    command: env | grep 'ZIMAGI_' > @env_file
    options:
        env_file: ~/.env


update:
    <<: *update_command

update-command-api:
    <<: *update_command
    servers:
        - groups.name="@{platform_name}-service-command"

update-data-api:
    <<: *update_command
    servers:
        - groups.name="@{platform_name}-service-data"

update-worker:
    <<: *update_command
    servers:
        - groups.name="@{platform_name}-service-worker"


restart:
    <<: *restart_command

restart-command:
    <<: *restart_command
    servers:
        - groups.name="@{platform_name}-service-command"

restart-data:
    <<: *restart_command
    servers:
        - groups.name="@{platform_name}-service-data"

restart-worker:
    <<: *restart_command
    servers:
        - groups.name="@{platform_name}-service-worker"


logs:
    <<: *log_command

command-logs:
    <<: *log_command
    servers:
        - groups.name="@{platform_name}-service-command"

data-logs:
    <<: *log_command
    servers:
        - groups.name="@{platform_name}-service-data"

scheduler-logs:
    <<: *log_command
    options:
        service: "scheduler"
    servers:
        - groups.name="@{platform_name}-service-worker"

worker-logs:
    <<: *log_command
    options:
        service: "worker"
    servers:
        - groups.name="@{platform_name}-service-worker"
